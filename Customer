/************************************************************************************************************************************************************/
/** Author: Nada Adel **/
/** Class: Customer **/
/************************************************************************************************************************************************************/


import java.util.ArrayList;
import java.util.List;

public class Customer {

        double balance;
        Cart cart;

        public Customer(double balance, Cart cart){
            this.balance = balance;
            this.cart= cart;
        }
        public void shipItems(List<Product> items) {
        double totalWeight = 0;
            System.out.println("\n** Shipment notice **");
            System.out.println("Item               Weight");
            System.out.println("-------------------------");        for (Product item : items) {
            System.out.println("- " + item.getName() + " | Weight: " + item.getWeight() + "kg");
            totalWeight += item.getWeight();
        }
        System.out.println("Total package weight: " + totalWeight + "kg");
        }
        public void checkout() {
            if (cart.isEmpty()) {
                System.out.println("Cart is empty.");
                return;
            }

            if (cart.hasExpiredItems()) {
                System.out.println("Cart contains expired items.");
                return;
            }

            double subtotal = cart.getSubtotal();
            double shipping = cart.getShippingFees();
            double total = subtotal + shipping;

            if (total > balance) {
                System.out.println("Not enough balance. Needed: $" + total + ", Available: $" + balance);
                return;
            }
            List<Product> toShip = new ArrayList<>();
            for (SingleItem item : cart.carts) {
                if (item.product.shippable) {
                    for (int i = 0; i < item.quantity; i++) {
                        toShip.add(item.product);
                    }
                }

            }

            shipItems(toShip);
            balance -= total;
            System.out.println("** Checkout receipt **");
            for (SingleItem item : cart.carts) {
                System.out.println(item.quantity + "x " + item.product.name + "       " + item.getTotalPrice());
            }
            System.out.println("----------------------");
            System.out.println("Subtotal         " + subtotal);
            System.out.println("Shipping         " + shipping);
            System.out.println("Amount           " + total);
            System.out.println("Balance Left     " + balance);
            System.out.println("END.");

            cart.clearCart();


        }

    }


